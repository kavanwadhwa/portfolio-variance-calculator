{"version":3,"sources":["components/BaseInput.tsx","components/SharesInput.tsx","components/TickerInput.tsx","components/XClose.tsx","components/Portfolio.tsx","App.tsx","index.tsx"],"names":["BaseInput","props","className","SharesInput","quantity","onSharesChange","value","placeholder","type","min","onChange","TickerInput","ticker","onTickerChange","XClose","size","width","height","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Portfolio","useState","tickers","setTickers","shares","setShares","stats","setStats","calculating","setCalculating","a","axios","post","portfolio","reduce","acc","index","data","variance","sd","map","e","newTicker","update","$set","target","newShares","valueAsNumber","onClick","$splice","onPairRemoved","length","$push","fetchStats","toFixed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca20952d.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface BaseInputProps {\n  [key: string]: any;\n  onChange: any;\n}\n\nexport const BaseInput: React.FC<BaseInputProps> = (props) => {\n  return (\n    <input\n      className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:border-gray-500\"\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { BaseInput } from \"./BaseInput\";\n\ninterface SharesInputProps {\n  quantity: number;\n  onSharesChange: Function;\n}\n\nexport const SharesInput: React.FC<SharesInputProps> = ({\n  quantity,\n  onSharesChange,\n}) => {\n  return (\n    <BaseInput\n      value={quantity}\n      placeholder=\"1\"\n      type=\"number\"\n      min={1}\n      onChange={onSharesChange}\n    />\n  );\n};\n","import React from \"react\";\nimport { BaseInput } from \"./BaseInput\";\n\ninterface TickerInputProps {\n  ticker: string | undefined;\n  onTickerChange: Function;\n}\n\nexport const TickerInput: React.FC<TickerInputProps> = ({\n  ticker,\n  onTickerChange,\n}) => {\n  return (\n    <BaseInput\n      value={ticker}\n      placeholder=\"AAPL\"\n      type=\"text\"\n      onChange={onTickerChange}\n    />\n  );\n};\n","import React from \"react\";\n\ninterface IconProps {\n  size: number;\n}\nexport const XClose: React.FC<IconProps> = ({ size }) => (\n  <svg\n    width={size}\n    height={size}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"red\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"white\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>\n);\n","import React, { useState } from \"react\";\nimport { SharesInput } from \"./SharesInput\";\nimport { TickerInput } from \"./TickerInput\";\nimport update from \"immutability-helper\";\nimport axios from \"axios\";\nimport { XClose } from \"./XClose\";\n\ninterface PortfolioProps {}\n\ninterface PortfolioStats {\n  variance?: number;\n  sd?: number;\n}\n\nexport const Portfolio: React.FC<PortfolioProps> = () => {\n  const [tickers, setTickers] = useState<(string | undefined)[]>([\n    \"AAPL\",\n    \"MSFT\",\n  ]);\n  const [shares, setShares] = useState<number[]>([20, 10]);\n  const [stats, setStats] = useState<PortfolioStats>({});\n  const [calculating, setCalculating] = useState<boolean>(false);\n\n  function onTickerChange(index: number, newTicker: string) {\n    setTickers((tickers) =>\n      update(tickers, {\n        [index]: {\n          $set: newTicker,\n        },\n      })\n    );\n  }\n\n  function onSharesChange(index: number, newShares: number) {\n    setShares((shares) =>\n      update(shares, {\n        [index]: {\n          $set: newShares,\n        },\n      })\n    );\n  }\n\n  function onPairRemoved(index: number) {\n    setTickers((tickers) =>\n      update(tickers, {\n        $splice: [[index, 1]],\n      })\n    );\n\n    setShares((shares) =>\n      update(shares, {\n        $splice: [[index, 1]],\n      })\n    );\n  }\n\n  function onAssetAdded() {\n    setTickers((tickers) =>\n      update(tickers, {\n        $push: [\"\"],\n      })\n    );\n\n    setShares((shares) =>\n      update(shares, {\n        $push: [0],\n      })\n    );\n  }\n\n  function onClearAll() {\n    setTickers([]);\n    setShares([]);\n  }\n\n  async function fetchStats() {\n    setStats({});\n    setCalculating(true);\n\n    const { data } = await axios.post(\n      \"https://portfolio-variance-calculator.herokuapp.com/variance\",\n      {\n        portfolio: tickers.reduce((acc, ticker, index) => {\n          if (ticker && shares[index] !== 0) {\n            acc[ticker] = shares[index];\n          }\n          return acc;\n        }, {} as Record<string, number>),\n      }\n    );\n\n    const { variance, sd } = data;\n\n    setStats({\n      variance,\n      sd,\n    });\n    setCalculating(false);\n  }\n\n  return (\n    <div className=\"w-full\">\n      {tickers.map((ticker, index) => {\n        return (\n          <div className=\"my-8 flex space-x-4 items-center\" key={ticker}>\n            <TickerInput\n              ticker={ticker}\n              onTickerChange={(e: any) => onTickerChange(index, e.target.value)}\n            />\n            <SharesInput\n              quantity={shares[index]}\n              onSharesChange={(e: any) =>\n                onSharesChange(index, e.target.valueAsNumber)\n              }\n            />\n            <button\n              onClick={() => onPairRemoved(index)}\n              className=\"rounded-full flex-none flex items-center justify-center font-bold text-xs\"\n            >\n              <XClose size={24} />\n            </button>\n          </div>\n        );\n      })}\n      <div className={`flex space-x-4 ${tickers.length === 0 ? \"mt-8\" : \"\"}`}>\n        <button\n          className=\"rounded text-white bg-green-500 hover:bg-green-700 w-full py-2 uppercase tracking-widest font-semibold\"\n          onClick={onAssetAdded}\n        >\n          Add Asset\n        </button>\n        <button\n          className=\"rounded text-white bg-red-500 hover:bg-red-700 w-full py-2 uppercase tracking-widest font-semibold\"\n          onClick={onClearAll}\n        >\n          Clear All\n        </button>\n      </div>\n      <div className=\"flex justify-center my-8\">\n        {tickers.length >= 1 ? (\n          <button\n            className=\"rounded text-white bg-purple-500 hover:bg-purple-700 py-2 w-full uppercase font-semibold tracking-widest\"\n            onClick={() => fetchStats()}\n          >\n            Calculate\n          </button>\n        ) : (\n          <span className=\"text-red-500 font-semibold text-lg\">\n            {\" \"}\n            Need at least 1 asset to perform calculation!\n          </span>\n        )}\n      </div>\n      {calculating ? (\n        <div className=\"leading-tight font-light flex justify-center text-lg items-center\">\n          {\" \"}\n          Calculating...{\" \"}\n        </div>\n      ) : (\n        <div className=\"flex space-x-12 justify-center text-lg\">\n          <div className=\"flex flex-col\">\n            <span className=\"leading-tight font-light\">Variance </span>\n            <span className=\"font-semibold text-center\">\n              {stats.variance ? `${(stats.variance * 100).toFixed(2)}%` : \"--\"}\n            </span>\n          </div>\n          <div className=\"flex flex-col\">\n            <span className=\"leading-tight font-light\">\n              Standard Deviation{\" \"}\n            </span>\n            <span className=\"font-semibold text-center\">\n              {stats.sd ? `${(stats.sd * 100).toFixed(2)}%` : \"--\"}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import \"./index.css\";\nimport { Portfolio } from \"./components\";\n\nexport default function App() {\n  return (\n    <div className=\"h-screen flex items-center flex-col w-1/2 m-auto\">\n      <div className=\"pt-8 flex flex-col justify-center items-center\">\n        <span className=\"font-semibold text-2xl\">\n          Portfolio Variance Calculator\n        </span>\n        <span className=\"text-sm italic text-center w-2/3 mt-2\">\n          Enter the ticker for each asset along with the corresponding number of\n          shares. Calculations leverage one year daily returns.\n        </span>\n      </div>\n      <Portfolio />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}